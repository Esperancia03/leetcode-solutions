class Solution {
public:
    bool search(vector<int>& nums, int target) {

        int low =0;
        int high = nums.size()-1;

        while(low<=high)
          {
            int med = (low + high)/2;
            
            if(nums[med]==target)
            {
                return true;
            }

            //handle duplicates, so cannot decide after the rotation which side is sorted
            
                if(nums[low]== nums[high] && nums[med]== nums[high])
                {
                    low++;
                    high--;
                }
            

         
             else if(nums[low]<= nums[med])
            {
             if(nums[low] <= target && target< nums[med])
            {
                high= med-1;
            }

            else 
            {
                low = med+1;
            }
            }

// the right side is the sorted part
            else{
                if(nums[med] < target && target<=nums[high])
                {
                   low = med+1;
                }
                else
                {
                    high = med-1;
                }
            }
            
        }
        return false;
        
    }
};
