class Solution {
public:
    int search(vector<int>& nums, int target) {

        int low=0;
        int high =nums.size()-1;
        

        while(low<=high)
        {
       int mid=(low+high)/2;
         
        if(nums[mid]==target)
        {
            return mid;
        }
        else if(nums[low]<=nums[mid] && nums[low]<=target && target<nums[mid])
    {
                high=mid-1;
               
    } 
        //if the right side is sorted
    else if(nums[mid]<=nums[high] && nums[mid]<target && target<=nums[high]){
           
                low = mid+1;
                
          
        }
        //else if it is not found in sorde sie
        else{
            if(nums[low] <=nums[mid])
            {
                low = mid+1;
            }
            else
            {
                high = mid-1;
            }
        }
        

        
        }
 
     return -1;
    }
};
